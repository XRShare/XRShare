<Plan>
1.  **Fix `toggleHostPermissions` error:** Modify the button action in `XRAnatomyView` to directly toggle the `isHostPermissionGranted` property of the `arViewModel`.
2.  **Fix `async` call error:** Wrap the call to `handleInitialLaunch()` within a `Task` block inside the `.onAppear` modifier in `XRAnatomyView`.
</Plan>

<file path="/Users/alikara/Desktop/CPSC 599/XR-Anatomy-App-2 copy 2/XR Anatomy/UIView.swift" action="modify">
  <change>
    <description>Correct the action for the host permission toggle button to directly toggle the 'isHostPermissionGranted' property.</description>
    <search>
===
                            // Host permission toggle
                            if arViewModel.userRole == .host {
                                Button(action: {
                                    $arViewModel.toggleHostPermissions
                                }) {
                                    Image(systemName: arViewModel.isHostPermissionGranted ? "lock.open" : "lock")
                                        .font(.system(size: 24))
===
    </search>
    <content>
===
                            // Host permission toggle
                            if arViewModel.userRole == .host {
                                Button(action: {
                                    arViewModel.isHostPermissionGranted.toggle() // Directly toggle the boolean property
                                }) {
                                    Image(systemName: arViewModel.isHostPermissionGranted ? "lock.open" : "lock")
                                        .font(.system(size: 24))
===
    </content>
  </change>
  <change>
    <description>Wrap the call to the async function 'handleInitialLaunch' in a Task within the .onAppear modifier.</description>
    <search>
===
                }
            }
        }
        .onAppear { handleInitialLaunch() }
        .onReceive(arViewModel.$loadingProgress) { progress in
            // Update local state
            loadingProgress = progress
===
    </search>
    <content>
===
                }
            }
        }
        .onAppear {
            Task {
                await handleInitialLaunch()
            }
        }
        .onReceive(arViewModel.$loadingProgress) { progress in
            // Update local state
            loadingProgress = progress
===
    </content>
  </change>
</file>